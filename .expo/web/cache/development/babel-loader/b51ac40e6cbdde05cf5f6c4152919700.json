{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Micha\\u0142 Grochowski\\\\Desktop\\\\coronkainfo\\\\covid alpha\\\\components\\\\own\\\\drop-down-bonus\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PropTypes from 'prop-types';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  icons: {\n    width: 20,\n    height: 20,\n    position: 'absolute',\n    right: 16\n  },\n  underline: {\n    width: '100%',\n    height: 1,\n    position: 'absolute',\n    top: 0\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  contentChild: {\n    padding: 12\n  },\n  contentView: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: '100%'\n  },\n  contentTxt: {\n    color: 'black',\n    marginLeft: 8,\n    fontSize: 12\n  },\n  contentFooter: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    height: 48,\n    paddingHorizontal: 12\n  }\n});\n\nvar Item = function (_Component) {\n  _inherits(Item, _Component);\n\n  var _super = _createSuper(Item);\n\n  function Item(props) {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _super.call(this, props);\n\n    _this.runAnimation = function () {\n      var initialValue = _this.state.contentVisible ? _this.state.headerHeight + _this.state.contentHeight : _this.state.headerHeight;\n      var finalValue = _this.state.contentVisible ? _this.state.headerHeight : _this.state.contentHeight + _this.state.headerHeight;\n\n      _this.setState({\n        contentVisible: !_this.state.contentVisible\n      });\n\n      _this.animated.setValue(initialValue);\n\n      Animated.spring(_this.animated, {\n        toValue: finalValue\n      }).start();\n    };\n\n    _this.onAnimLayout = function (evt) {\n      var headerHeight = evt.nativeEvent.layout.height;\n\n      if (!_this.state.isMounted && !_this.props.contentVisible) {\n        _this.animated = new Animated.Value(headerHeight);\n\n        _this.setState({\n          isMounted: true,\n          headerHeight: headerHeight\n        });\n\n        return;\n      } else if (!_this.state.isMounted) {\n        InteractionManager.runAfterInteractions(function () {\n          _this.animated = new Animated.Value(headerHeight + _this.state.contentHeight);\n        });\n      }\n\n      _this.setState({\n        headerHeight: headerHeight,\n        isMounted: true\n      });\n    };\n\n    _this.onLayout = function (evt) {\n      var contentHeight = evt.nativeEvent.layout.height;\n\n      _this.setState({\n        contentHeight: contentHeight\n      });\n    };\n\n    _this.onPress = function () {\n      _this.runAnimation();\n\n      _this.props.pressedActionButton(_this.props.id);\n    };\n\n    _this.state = {\n      isMounted: false,\n      contentVisible: props.contentVisible,\n      headerheight: 0,\n      contentHeight: 0\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Animated.View, {\n        style: [styles.container, {\n          height: this.animated,\n          backgroundColor: this.props.backgroundColor\n        }, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        activeOpacity: 0.5,\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        onLayout: this.onAnimLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, this.props.header)), React.createElement(View, {\n        style: styles.content,\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.contentChild],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return Item;\n}(Component);\n\nItem.defaultProps = {\n  contentVisible: false,\n  backgroundColor: 'transparent',\n  titleBackground: 'transparent',\n  contentBackground: 'transparent',\n  underlineColor: '#d3d3d3',\n  visibleImage: false,\n  invisibleImage: false,\n  pressedActionButton: null,\n  id: null\n};\nItem.propTypes = {\n  contentVisible: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  titleBackground: PropTypes.string,\n  contentBackground: PropTypes.string,\n  underlineColor: PropTypes.string,\n  visibleImage: PropTypes.any,\n  invisibleImage: PropTypes.any,\n  pressedActionButton: PropTypes.any,\n  id: PropTypes.string\n};\nexport default Item;","map":{"version":3,"sources":["C:/Users/Micha≈Ç Grochowski/Desktop/coronkainfo/covid alpha/components/own/drop-down-bonus/index.js"],"names":["React","Component","PropTypes","styles","StyleSheet","create","container","flex","flexDirection","overflow","icons","width","height","position","right","underline","top","content","justifyContent","alignItems","contentChild","padding","contentView","contentTxt","color","marginLeft","fontSize","contentFooter","paddingHorizontal","Item","props","runAnimation","initialValue","state","contentVisible","headerHeight","contentHeight","finalValue","setState","animated","setValue","Animated","spring","toValue","start","onAnimLayout","evt","nativeEvent","layout","isMounted","Value","InteractionManager","runAfterInteractions","onLayout","onPress","pressedActionButton","id","headerheight","backgroundColor","style","header","children","defaultProps","titleBackground","contentBackground","underlineColor","visibleImage","invisibleImage","propTypes","bool","string","any"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  TouchableOpacity,\n  Image,\n  Text,\n  View,\n  StyleSheet,\n  InteractionManager,\n  Platform,\n  Dimensions,\n  Animated,\n} from 'react-native';\n\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n  icons: {\n    width: 20,\n    height: 20,\n    position: 'absolute',\n    right: 16,\n  },\n  underline: {\n    width: '100%',\n    height: 1,\n    position: 'absolute',\n    top: 0,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  contentChild: {\n    padding: 12,\n  },\n  contentView: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: '100%',\n  },\n  contentTxt: {\n    color: 'black',\n    marginLeft: 8,\n    fontSize: 12,\n  },\n  contentFooter: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    height: 48,\n    paddingHorizontal: 12,\n  },\n});\n\nclass Item extends Component {\n  static animated;\n  static defaultProps = {\n    contentVisible: false,\n    backgroundColor: 'transparent',\n    titleBackground: 'transparent',\n    contentBackground: 'transparent',\n    underlineColor: '#d3d3d3',\n    visibleImage: false,\n    invisibleImage: false,\n\tpressedActionButton: null,\n\tid: null,\n  };\n\n  static propTypes = {\n    contentVisible: PropTypes.bool,\n    backgroundColor: PropTypes.string,\n    titleBackground: PropTypes.string,\n    contentBackground: PropTypes.string,\n    underlineColor: PropTypes.string,\n    visibleImage: PropTypes.any,\n    invisibleImage: PropTypes.any,\n\tpressedActionButton: PropTypes.any,\n\tid: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMounted: false,\n      contentVisible: props.contentVisible,\n      headerheight: 0,\n      contentHeight: 0,\n    };\n  }\n\n  render() {\n    return (\n      <Animated.View style={[\n        styles.container,\n        {\n          height: this.animated,\n          backgroundColor: this.props.backgroundColor,\n        },\n        this.props.style,\n      ]}>\n        <TouchableOpacity\n          activeOpacity={0.5}\n          onPress={this.onPress}\n        >\n          <View \n            onLayout={ this.onAnimLayout }\n          >\n            { this.props.header }\n          </View>\n        </TouchableOpacity>\n        <View\n          style={styles.content}\n          onLayout={this.onLayout}\n        >\n          <View\n            style={[\n              styles.contentChild,\n            ]}\n          >\n            { this.props.children }\n          </View>\n        </View>\n      </Animated.View>\n    );\n  }\n\n  runAnimation = () => {\n    const initialValue = this.state.contentVisible\n      ? this.state.headerHeight + this.state.contentHeight : this.state.headerHeight;\n    const finalValue = this.state.contentVisible\n      ? this.state.headerHeight : this.state.contentHeight + this.state.headerHeight;\n\n    this.setState({\n      contentVisible: !this.state.contentVisible,\n    });\n\n    this.animated.setValue(initialValue);\n    Animated.spring(\n      this.animated,\n      {\n        toValue: finalValue,\n      },\n    ).start();\n  }\n\n  onAnimLayout = (evt) => {\n    const headerHeight = evt.nativeEvent.layout.height;\n    if (!this.state.isMounted && !this.props.contentVisible) {\n      this.animated = new Animated.Value(headerHeight);\n      this.setState({\n        isMounted: true,\n        headerHeight,\n      });\n      return;\n    } else if (!this.state.isMounted) {\n      InteractionManager.runAfterInteractions(() => {\n        this.animated = new Animated.Value(headerHeight + this.state.contentHeight);\n      });\n    }\n    this.setState({ headerHeight, isMounted: true });\n  }\n\n  onLayout = (evt) => {\n    const contentHeight = evt.nativeEvent.layout.height;\n    this.setState({ contentHeight });\n  }\n\n  onPress = () => {\n    this.runAnimation();\n\tthis.props.pressedActionButton(this.props.id);\n  }\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}