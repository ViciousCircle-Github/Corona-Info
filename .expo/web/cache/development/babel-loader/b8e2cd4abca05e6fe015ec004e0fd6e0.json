{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Micha\\u0142 Grochowski\\\\Desktop\\\\coronkainfo\\\\covid alpha\\\\screens\\\\Browse.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/SimpleLineIcons\";\nimport IconFontAwesone from \"@expo/vector-icons/FontAwesome5\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { Block } from \"../components\";\nimport Menu from \"../components/Menu\";\nimport { tabsArray } from \"../constants/tabs\";\nimport { theme } from \"../constants\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Tab = createMaterialTopTabNavigator();\n\nvar Browse = function (_Component) {\n  _inherits(Browse, _Component);\n\n  var _super = _createSuper(Browse);\n\n  function Browse(props) {\n    var _this;\n\n    _classCallCheck(this, Browse);\n\n    _this = _super.call(this, props);\n\n    _this._toggleMenu = function () {\n      if (_this.state.show) {\n        Animated.parallel([Animated.timing(_this.state.SlideInUp, {\n          toValue: 0,\n          duration: 300,\n          useNativeDriver: true\n        })]).start(function () {\n          _this.setState({\n            show: false\n          });\n        });\n      } else {\n        Animated.parallel([Animated.timing(_this.state.SlideInUp, {\n          toValue: 1,\n          duration: 300,\n          useNativeDriver: true\n        })]).start();\n\n        _this.setState({\n          show: true\n        });\n      }\n    };\n\n    _this.state = {\n      show: false,\n      menuStyle: \"\",\n      SlideInUp: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(Browse, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var nav = navigation;\n      var menu = React.createElement(Menu, {\n        navigation: nav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }\n      });\n      nav.setOptions({\n        headerLeft: function headerLeft() {\n          return React.createElement(Icon.Button, {\n            name: \"menu\",\n            size: 22,\n            backgroundColor: \"transparent\",\n            color: \"white\",\n            onPress: function onPress() {\n              return _this2._toggleMenu();\n            },\n            style: {\n              marginLeft: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(IconFontAwesone.Button, {\n            name: \"exclamation-triangle\",\n            size: 26,\n            backgroundColor: \"transparent\",\n            color: \"white\",\n            onPress: function onPress() {\n              return nav.navigate('startscreen');\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }\n          });\n        }\n      });\n      return React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Navigator, {\n        tabBarOptions: {\n          labelStyle: theme.tabMenu.style.label,\n          indicatorStyle: theme.tabMenu.style.indicator,\n          style: theme.tabMenu.style.bar,\n          tabStyle: theme.tabMenu.style.tab,\n          activeTintColor: theme.tabMenu.activeFontColor,\n          inactiveTintColor: theme.tabMenu.inactiveFontColor,\n          scrollEnabled: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, tabsArray.map(function (tab) {\n        return React.createElement(Tab.Screen, {\n          name: tab.name,\n          component: tab.data,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        });\n      })), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          opacity: this.state.SlideInUp,\n          top: 0,\n          left: this.state.show ? 0 : -width,\n          width: width,\n          height: height,\n          backgroundColor: \"rgba(0,0,0,0.3)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          widht: width,\n          height: height\n        },\n        onPress: function onPress() {\n          return _this2._toggleMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 14\n        }\n      })), React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          transform: [{\n            translateX: this.state.SlideInUp.interpolate({\n              inputRange: [0, 1],\n              outputRange: [-width / 1.5, 0]\n            })\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, menu));\n    }\n  }]);\n\n  return Browse;\n}(Component);\n\nexport default Browse;","map":{"version":3,"sources":["C:/Users/Micha≈Ç Grochowski/Desktop/coronkainfo/covid alpha/screens/Browse.js"],"names":["React","Component","Icon","IconFontAwesone","createMaterialTopTabNavigator","Block","Menu","tabsArray","theme","Dimensions","get","width","height","Tab","Browse","props","_toggleMenu","state","show","Animated","parallel","timing","SlideInUp","toValue","duration","useNativeDriver","start","setState","menuStyle","Value","navigation","nav","menu","setOptions","headerLeft","marginLeft","headerRight","navigate","labelStyle","tabMenu","style","label","indicatorStyle","indicator","bar","tabStyle","tab","activeTintColor","activeFontColor","inactiveTintColor","inactiveFontColor","scrollEnabled","map","name","data","position","opacity","top","left","backgroundColor","widht","transform","translateX","interpolate","inputRange","outputRange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Animated,\n  Dimensions,\n  TouchableOpacity\n} from \"react-native\";\n\nimport Icon from 'react-native-vector-icons/SimpleLineIcons';\nimport IconFontAwesone from 'react-native-vector-icons/FontAwesome5';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nimport { Block } from \"../components\";\nimport Menu from '../components/Menu';\nimport { tabsArray } from '../constants/tabs';\nimport { theme } from \"../constants\";\n\nconst { width, height } = Dimensions.get(\"window\");\nconst Tab = createMaterialTopTabNavigator();\n\nclass Browse extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      show: false,\n      menuStyle: \"\",\n      SlideInUp: new Animated.Value(0),\n    }\n  }\n\n  \n\n  _toggleMenu = () => {\n    if(this.state.show) { \n      Animated.parallel([\n        Animated.timing(this.state.SlideInUp, {\n          toValue: 0,\n          duration: 300,\n          useNativeDriver: true\n        })\n      ]).start(() => {\n        this.setState({show: false})\n    });\n      \n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.SlideInUp, {\n          toValue: 1,\n          duration: 300,\n          useNativeDriver: true\n        })\n      ]).start();\n      this.setState({show: true})\n    } \n  };\n\n  \n  render() {\n\t  const { navigation } = this.props;\n    \n    const nav = navigation;\n    const menu = <Menu navigation={nav}/>;\n\n    nav.setOptions({\n      headerLeft: () => (\n        <Icon.Button\n          name=\"menu\"\n          size={22}\n          backgroundColor=\"transparent\"\n          color=\"white\"\n          onPress={() => this._toggleMenu()}\n          style={{marginLeft: 10}}\n        />\n      ),\n      headerRight: () => (\n        <IconFontAwesone.Button\n          name=\"exclamation-triangle\"\n          size={26}\n          backgroundColor=\"transparent\"\n          color=\"white\"\n          onPress={() => nav.navigate('startscreen')}\n        />\n      ),\n    });\n\n    return (\n\n      <Block>\n        \n        <Tab.Navigator\n        tabBarOptions={{\n          labelStyle: theme.tabMenu.style.label ,\n          indicatorStyle: theme.tabMenu.style.indicator,\n          style: theme.tabMenu.style.bar,\n          tabStyle: theme.tabMenu.style.tab,\n          activeTintColor: theme.tabMenu.activeFontColor,\n          inactiveTintColor: theme.tabMenu.inactiveFontColor,\n          scrollEnabled: true,\n        }}>\n          {tabsArray.map(tab => (\n            <Tab.Screen name={tab.name} component={tab.data} />\n          ))}\n\n        </Tab.Navigator>\n        \n\n            <Animated.View\n            style={{position: 'absolute',opacity: this.state.SlideInUp, top: 0, left: this.state.show?0:-width, width: width, height: height, backgroundColor: \"rgba(0,0,0,0.3)\"}}\n            ><TouchableOpacity style={{ widht: width, height: height}} onPress={() => this._toggleMenu()}></TouchableOpacity></Animated.View>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              transform: [{\n                translateX: this.state.SlideInUp.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [-width/1.5, 0]\n                })\n              }]\n            }}\n          >\n            \n            {menu}\n          \n          \n            \n          </Animated.View>\n          \n        \n        \n      </Block>\n    );\n  }\n}\n\nexport default Browse;"]},"metadata":{},"sourceType":"module"}