{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Micha\\u0142 Grochowski\\\\Desktop\\\\coronkainfo\\\\covid alpha\\\\screens\\\\tab-menu\\\\tab1.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Block, Text } from \"../../components\";\nimport { theme, mocks } from \"../../constants\";\nimport DropDownBonus from \"../../components/own/drop-down-bonus\";\nimport HTMLView from \"../../components/own/htmlview-bonus\";\nimport HashMap from 'hashmap';\n\nvar Tab1 = function (_Component) {\n  _inherits(Tab1, _Component);\n\n  var _super = _createSuper(Tab1);\n\n  function Tab1(props) {\n    var _this;\n\n    _classCallCheck(this, Tab1);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function (id) {\n      if (_this.state.stateOfButtons.get(id)) {\n        var hm = _this.state.stateOfButtons.clone().set(id, false);\n\n        _this.setState({\n          stateOfButtons: hm\n        });\n      } else {\n        var _hm = _this.state.stateOfButtons.clone().set(id, true);\n\n        _this.setState({\n          stateOfButtons: _hm\n        });\n      }\n\n      if (_this.state.buttonId === id) {\n        _this.setState({\n          buttonId: null\n        });\n      } else {\n        _this.setState({\n          buttonId: id\n        });\n      }\n    };\n\n    _this.state = {\n      buttonId: null,\n      stateOfButtons: new HashMap()\n    };\n    return _this;\n  }\n\n  _createClass(Tab1, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 3\n        }\n      }, React.createElement(Block, {\n        flex: false,\n        row: true,\n        center: true,\n        space: \"between\",\n        style: theme.tab1.styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        h2: true,\n        bold: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 10\n        }\n      }, \"Dowiedz się więcej na temat COVID-19\")), React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, React.createElement(Block, {\n        flex: false,\n        style: theme.tab1.styles.buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, mocks.virusInfos.map(function (virusInfo) {\n        return React.createElement(View, {\n          key: virusInfo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 8\n          }\n        }, React.createElement(DropDownBonus, {\n          pressedActionButton: _this2.onPress,\n          id: virusInfo.id,\n          contentVisible: false,\n          header: React.createElement(View, {\n            center: true,\n            middle: true,\n            shadow: true,\n            style: _this2.state.stateOfButtons.get(virusInfo.id) ? theme.buttons.buttonEn : theme.buttons.buttonDi,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            center: true,\n            style: _this2.state.stateOfButtons.get(virusInfo.id) ? theme.tab1.styles.textBlack : theme.tab1.styles.textWhite,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 10\n            }\n          }, virusInfo.name)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, React.createElement(HTMLView, {\n          value: virusInfo.data,\n          key: virusInfo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }\n        })));\n      }))));\n    }\n  }]);\n\n  return Tab1;\n}(Component);\n\nexport default Tab1;","map":{"version":3,"sources":["C:/Users/Michał Grochowski/Desktop/coronkainfo/covid alpha/screens/tab-menu/tab1.js"],"names":["React","Component","Block","Text","theme","mocks","DropDownBonus","HTMLView","HashMap","Tab1","props","onPress","id","state","stateOfButtons","get","hm","clone","set","setState","buttonId","tab1","styles","header","buttons","virusInfos","map","virusInfo","buttonEn","buttonDi","textBlack","textWhite","name","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  View,\n  ScrollView,\n} from 'react-native';\n\nimport { Block, Text } from \"../../components\";\nimport { theme, mocks } from \"../../constants\";\n  \nimport DropDownBonus from '../../components/own/drop-down-bonus';\nimport HTMLView from '../../components/own/htmlview-bonus';\nimport HashMap from 'hashmap';\n\nclass Tab1 extends Component {\n  \n  constructor(props) {\n\tsuper(props);\n  \tthis.state = {\n  \tbuttonId: null, \n  \tstateOfButtons: new HashMap(),\n   \t};\n  }\n\n  onPress = id => {\n\tif(this.state.stateOfButtons.get(id)) {\n\t\tlet hm = this.state.stateOfButtons.clone().set(id, false);\n\t\tthis.setState({stateOfButtons: hm});\n\t}\n\telse {\n\t\tlet hm = this.state.stateOfButtons.clone().set(id, true);\n\t\tthis.setState({stateOfButtons: hm});\n\t}\n\tif(this.state.buttonId === id) {this.setState({ buttonId: null })} \n\telse {this.setState({ buttonId: id })}\n  }\n\n  render() {\n\t\n    return (\n\t\t<View>\n\t\t  <Block flex={false} row center space=\"between\" style={theme.tab1.styles.header}>\n        \t<Text h2 bold>{\"Dowiedz się więcej na temat COVID-19\"}</Text>\n          </Block>\n\n          <ScrollView\n\t\t    showsVerticalScrollIndicator={false}\n          >\n\n\t\t    <Block flex={false} style={theme.tab1.styles.buttons}>\n\t\t      {mocks.virusInfos.map(virusInfo => (  \n\t\t\t    <View key={virusInfo.id}>\n\t\t\t  \t  <DropDownBonus\n\t\t\t \t    pressedActionButton={this.onPress}\n\t\t\t\t    id={virusInfo.id}\n\t\t\t\t    contentVisible={false}\n\t\t\t\t    header={\t  \n\t\t\t\t      <View center middle shadow style={(this.state.stateOfButtons.get(virusInfo.id)) ?  theme.buttons.buttonEn : theme.buttons.buttonDi}>\n\t\t\t\t\t    <Text center style={(this.state.stateOfButtons.get(virusInfo.id)) ?  theme.tab1.styles.textBlack : theme.tab1.styles.textWhite}> \n\t\t\t\t\t      {virusInfo.name}\n\t\t\t\t\t    </Text>\n\t\t\t\t\t  </View>\n\t\t\t\t    }\n\t\t\t\t  >\n\t\t\t\t    <HTMLView\n\t\t\t\t\t  value={virusInfo.data}\n\t\t\t\t\t  key={virusInfo.id}\n\t\t\t\t    />\n\t\t\t\t  </DropDownBonus>\n\t\t\t    </View>\n\t\t      ))}\n\t\t    </Block>\n\t\t  </ScrollView>\n\t\t</View>\n    );\n  }\n}\n\nexport default Tab1;\n"]},"metadata":{},"sourceType":"module"}